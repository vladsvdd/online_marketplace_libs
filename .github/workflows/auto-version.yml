name: Auto Version on Commit

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'README**'

permissions:
  contents: write

jobs:
  auto-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # Устанавливаем корректный remote URL
          git remote set-url origin "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          # Сбрасываем все изменения, которые могли появиться при checkout
          git reset --hard HEAD
          git clean -fd

      - name: Check if version bump is needed
        id: check-version
        run: |
          # Получаем список измененных файлов (исключая документацию)
          changed_files=$(git diff --name-only HEAD~1 | grep -v -E '\.(md|txt)$' | grep -v 'README' | grep -v '.gitignore')
          
          if [ -z "$changed_files" ]; then
            echo "need_version=false" >> $GITHUB_OUTPUT
            echo "No code changes detected, skipping version bump"
          else
            # Проверяем commit message
            COMMIT_MSG=$(git log -1 --pretty=format:"%s")
            if echo "$COMMIT_MSG" | grep -q "\[skip version\]"; then
              echo "need_version=false" >> $GITHUB_OUTPUT
              echo "Version bump skipped by commit message"
            else
              echo "need_version=true" >> $GITHUB_OUTPUT
              echo "Changes detected in files: $changed_files"
              echo "Version bump needed"
            fi
          fi

      - name: Run version script
        if: steps.check-version.outputs.need_version == 'true'
        run: |
          # Сбрасываем возможные изменения перед выполнением
          git reset --hard HEAD
          git clean -fd
          
          chmod +x ./scripts/version.sh
          ./scripts/version.sh patch

      - name: Verify tags
        if: steps.check-version.outputs.need_version == 'true'
        run: |
          git fetch --tags
          git tag -l | tail -5